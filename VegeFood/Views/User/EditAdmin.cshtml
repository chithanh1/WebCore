@using VegeFood.Models.SQLModels
@model User
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Script{
    <script>
        function Submit() {
            var password = document.forms["editForm"]["confirmOldPassword"].value;
            if (password == @Model.Password) {
                alert("confirm old password success");
                var confirmNewPassword = document.forms["editForm"]["confirmNewPassword"].value;
                var newPassword = document.forms["editForm"]["password"].value;
                if (confirmNewPassword == newPassword) return true;
            }
            alert("confirm password fail");
            return false;
        }
    </script>
}

<form name="editForm" action="/admin/users/edit/handle" onsubmit="return Submit()" method="post" class="form-horizontal">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    @Html.TextBoxFor(model => model.Id, new { style = "visibility: hidden" })
    <div class="card-body">
        <div class="form-group row">
            @Html.Label("inputEmail3", "Name", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Name, new { id = "name", @class = "form-control", placeholder = "Name" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Age", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Age, new { id = "age", @class = "form-control", placeholder = "Age" })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Username", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Username, new { id = "username", @class = "form-control", placeholder = "Username" })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Confirm Old Password</label>
            <div class="col-sm-10">
                <input type="password" name="confirmOldPassword" class="form-control" placeholder="Confirm Old Password" required />
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Password", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.PasswordFor(model => model.Password, new { name = "password", id = "password", @class = "form-control", placeholder = "New Password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Confirm New Password</label>
            <div class="col-sm-10">
                <input type="password" name="confirmNewPassword" class="form-control" placeholder="Confirm New Password" required />
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Birthday", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Birthday, "{0:dd/MM/yyyy}", new { id = "birthday", @class = "form-control", placeholder = "Birthday" })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Phone", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Phone, new { id = "phone", @class = "form-control", placeholder = "Phone" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Email", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Email, new { id = "email", @class = "form-control", placeholder = "Email" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.Label("inputEmail3", "Address", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Address, new { id = "address", @class = "form-control", placeholder = "Address" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <label class="col-sm-2 col-form-label">Male</label>
                <div class="col-sm-4">
                    @Html.RadioButtonFor(model => model.Sex, "Male")
                </div>
                <label class="col-sm-2 col-form-label">Female</label>
                <div class="col-sm-6">
                    @Html.RadioButtonFor(model => model.Sex, "Female")
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-default" />
        </div>
    </div>
</form>
